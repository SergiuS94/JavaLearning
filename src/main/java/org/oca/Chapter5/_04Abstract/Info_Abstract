An abstract class is a class that is marked with the abstract keyword.
    !It can't be instantiated
An abstract method is a method marked with the abstract keyword.
    !It can be defined only in an abstract class
    !Has no implementation

When you extend an abstract class, you have to implement all of its abstract methods
When you extend a class and you want to override a method, you have to keep in mind the override rule which says that the method from the child class needs to have the visibility
at least as what the parent has

Extending an abstract class by another abstract class will result in not being required to implement its abstract methods
but the class that extends the 2nd abstract class will have to implement all abstract methods from both classes
!if the 2nd abstract class implements the method that is abstract in the 1st, then the 3rd class won't have to implement it, since it is inherited from the 2nd

Abstract class Definition Rules:
1.Abstract classes cannot be instantiated directly
2.Abstract classes may be defined with any number, including zero, of abstract and non-abstract methods
3.Abstract classes may not be marked as private or final
4.An abstract class that extends another abstract class inherits all of its abstract methods as its own abstract methods
5.The first concrete class that extends an abstract class must provide an implementation for all the inherited abstract methods

Abstract Method Definition rules:
1.Abstract methods may only be defined in abstract classes
2.Abstract methods may not be declared private or final
3.Abstract methods must not provide a method body/implementation in th abstract class for which is it declared
4.Implementing an abstract method in a subclass follows the same rules for overriding a method. For example, the name and signature must be the same,
  the visibility of the method in the subclass must be at least as accessible as the method in the parent class

!Check 04_Abstract / _03MultipleInterfaceInheritances for a good example/problem
!If a class implements two interface that have default methods with the same name and signature, the compiler will throw an error.
    ->check 04_Abstract/_04DefaultMethods_MultipleInheritance
    ->Exception if the subclass overrides the duplicate default methods, the code will compile


Static Interface Methods
    ->These methods are defined with the static keyword.
    ->A static method defined in a interface is not inherited in any classes that implement the interface
    Rules:
        1.Like all methods in an interface, a static method is assumed to be public and will not compile if marked as private or protected
        2.To reference the static method, a reference to the name of the interface must be used.